#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <0>;

    chain-length = <27>;

    // 21 backlight + 6 glowlight
};

// Behavior configuration

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
    quick-release;
};

// Keymap configuration (Colemak-DHm)

/ {
    combos {
        compatible = "zmk,combos";

        KoreanB {
            bindings = <&kp B>;
            key-positions = <30 31>;
            layers = <0>;
        };

        DoubleSpace {
            bindings = <&lt 5 RIGHT_ALT>;
            key-positions = <38 39>;
        };
    };

    behaviors {
        LCS: LCS {
            compatible = "zmk,behavior-tap-dance";
            label = "LCS";
            #binding-cells = <0>;
            bindings = <&lt 3 SPACE>, <&lt 1 SPACE>;

            tapping-term-ms = <200>;
        };

        RCS: RCS {
            compatible = "zmk,behavior-tap-dance";
            label = "RCS";
            #binding-cells = <0>;
            bindings = <&lt 4 SPACE>, <&kp SPACE>;

            tapping-term-ms = <200>;
        };

        LayerMove: LayerMove {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERMOVE";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 1>, <&sl 2>;
        };
    };

    macros {
        VsTerm: VsTerm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LCTRL &kp GRAVE>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LCTRL &kp GRAVE>;

            label = "VSTERM";
        };

        HangulMath: HangulMath {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp N &kp M>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "HANGULMATH";
        };

        HangulExit: HangulExit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT &kp ESC>,
                <&macro_release>,
                <&kp LSHIFT &kp ESC>;

            label = "HANGULEXIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwerty {
            // -----------------------------------------------------------------------------------------------------------------------------
            // |        |   Q    |   W    |     F     |     P     |     B     | # |     J     |    L     |    U    |    Y   |   '    |     |
            // | LAYERS | A/LGUI | R/LALT |  S/LCTRL  |  T/LSHFT  |     G     | # |     M     | N/LSHFT  | E/LCTRL | I/LALT | O/LGUI |     |
            // |        |   Z    | X/RALT |     C     |     D     |     V     | # |     K     |    H     |    ,    | ./RALT |   /    |     |
            //                            | ESC/MEDIA | SPACE/NAV | TAB/MOUSE | # | ENTER/SYM | BSPC/NUM | DEL/FN  |

            bindings = <
&mt ESC TAB     &kp Q  &kp W  &kp E             &kp R         &kp T          &kp Y        &kp U       &kp I              &kp O    &kp P                &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D             &kp F         &kp G          &kp H        &kp J       &kp K              &kp L    &kp SEMICOLON        &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V         &kp B          &kp N        &kp M       &kp COMMA          &kp DOT  &mt BACKSLASH SLASH  &mt RIGHT_SHIFT ENTER
                              &kp LEFT_COMMAND  &kp LEFT_ALT  &lt 3 SPACE    &lt 4 SPACE  &LayerMove  &kp RIGHT_CONTROL
            >;

            label = "Q";
        };

        Num {
            bindings = <
&trans  &trans       &trans        &trans           &trans         &kp KP_NUMLOCK    &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp CAPSLOCK      &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans       &trans        &trans           &trans         &kp SCROLLLOCK    &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                                   &trans           &trans         &trans            &kp KP_NUMBER_0  &trans           &kp KP_DOT
            >;

            label = "N";
        };

        Macro {
            bindings = <
&VsTerm      &none  &none  &none  &none  &none    &none  &none        &none  &none  &none  &none
&none        &none  &none  &none  &none  &none    &none  &none        &none  &none  &none  &none
&HangulExit  &none  &none  &none  &none  &none    &none  &HangulMath  &none  &none  &none  &none
                           &none  &none  &none    &none  &trans       &none
            >;

            label = "MC";
        };

        Move {
            // ------------------------------------------------------------------------------------
            // |     |      |      |       |       |      | # |     |     |     |     |     |     |
            // |     | LGUI | LALT | LCTRL | LSHFT |      | # |     |     |     |     |     |     |
            // |     |      | RALT |       |       |      | # |     |     |     |     |     |     |
            //                     |       |       | HELD | # |     |     |     |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7       &kp N8         &kp N9     &kp N0     &kp DEL
&trans     &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN     &kp UP         &kp RIGHT  &kp MINUS  &kp EQUAL
&trans     &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &trans     &trans
                           &trans  &trans  &trans    &trans    &trans       &trans
            >;

            label = "M";
        };

        Function {
            bindings = <
&kp F11  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6            &kp F7             &kp F8  &kp F9  &kp F10  &kp F12
&trans   &trans  &trans  &trans  &trans  &trans    &kp LS(NUMBER_9)  &kp LS(NUMBER_0)   &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &trans  &trans   &trans
                         &trans  &trans  &trans    &trans            &trans             &trans
            >;

            label = "F";
        };

        KeyboardConfig {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_ON   &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &none
&out OUT_TOG  &none         &none         &none         &none         &none           &rgb_ug RGB_OFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none
&none         &none         &none         &none         &none         &none           &none            &none            &rgb_ug RGB_SAD  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &none
                                          &soft_off     &sys_reset    &none           &none            &sys_reset       &soft_off
            >;

            label = "KC";
        };
    };
};
